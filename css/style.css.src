* {
  padding:0;
  margin:0;
  font-family: 'Roboto', sans-serif;
}

.clearfix {
  overflow: auto;
}

.education-entry, .work-entry, .project-entry {
  padding-left: 5%;
  padding-right: 5%;
}

h1 {
  font-size: 40px;
  color: #F5A623;
  line-height: 48px;
  display: inline;
}

h2 {
  font-weight: bold;
  font-size: 24px;
  color: #999999;
  line-height: 29px;
  padding: 10px;
}

h3 {
  font-style: italic;
  font-size: 20px;
  color: #000000;
  line-height: 22px;
}

h4 {
  font-weight: bold;
  font-size: 14px;
  color: #4A4A4A;
  line-height: 17px;
}

h2, h3, h4, h5 {
  padding:10px;
  padding-left: 5%;
  padding-right: 5%;
}


.date-text {
  font-style: italic;
  font-size: 14px;
  color: #999999;
  line-height: 16px;
  float: left;
}

.location-text {
  font-style: italic;
  font-size: 14px;
  color: #999999;
  line-height: 16px;
  float: right;

}

p {
  font-size: 14px;
  color: #333333;
  line-height: 21px;
}

a {
  color: #1199C3;
  text-decoration: none;
  margin-top: 10px;
  display: block;
}

.welcome-message {
  font-style: italic;
  font-size: 18px;
  color: #F3F3F3;
  line-height: 28px;
}

#skillsH3 {
  color: #F5AE23;
  display: none;
}

.orange {
  background-color: #F5AE23;
}

.orange-text {
  color: #F5AE23;
}

.white-text {
  font-weight: bold;
  color: #FFFFFF;
}

.gray {
  background-color: #F3F3F3;
  padding-bottom: 10px;
  clear:both;
}

.dark-gray {
  background-color: #4A4A4A;
}

/* TODO: Replace with image later */
#header {
  background-color: #484848;
}

.flex-box {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: space-around;
  padding: 10px;
}

.center-content {
  padding-top: 2.5%;
  padding-left: 5%;
  padding-right: 5%;
  padding-bottom: 2.5%
}

ul {
  list-style-type: none;
}

.biopic {
  float: left;
  padding: 10px;
  width: 200px;
  display: none;
}

img {
  padding: 10px;
}

/* Bar chart stuff */
.chart div {
  font: 10px sans-serif;
  background-color: #4A4A4A;
  text-align: right;
  padding: 3px;
  margin: 1px;
  height: 12px;
  color: white;
  display: inline-block;
}

span {
  padding: 5px;
}

#letsConnect {
  text-align: center;
}

@media only screen and (max-width: 1024px) {
  #letsConnect {
    margin-top: 5%;
  }
}

@media only screen and (max-width:900px) {
  .biopic {
    width: 175px;
  }
}

@media only screen and (max-width: 750px) {
  #letsConnect {
    margin-top: 10%;
  }
  .biopic {
    width: 150px;
  }
  .welcome-message {
    display: none;
  }
}

#map {
  display: block;
  height: 100%;
  margin-left: 5%;
  margin-right: 5%;
}

#mapDiv {
  height: 400px;
  width: 100%;
  padding-bottom: 5%;
}

@media only screen and (min-width: 750px) {
  #skillsH3,
  .biopic {
    display: block;
  }
}


/* Added for cloned project */

/* override from original styles */

/* The formatting for dates and locations seemed a bit tricky / sloppy, but it
   (mostly) worked; dates floated left, location floated right, and following
   content 'wraps' to the next line, or starts with an explict <br>.  As was,
   failed if date is the final item of the block: the following block ended up
   indented.  Adding clear: both to the block (education-entry) fixes this, as
   long as the following element following the final block also does the clear.
   Still broke for the last education-entry block, if the following element
   did not have the clear.  Better is to clear before ending the block.

   With only location floated, layout does not mess up if there is no <br> or
   clear after the date and location.  Same if no location exists.  Assuming
   the location element is before the date. */
.date-text {
  float: none;
  display: inline-block;
}

/* remove padding from generic spans.  These are inline elements.  If there
   needs to be space around them, a normal space character is probably the
   correct (semantic) structure.  For the general case, instead of
   <span>content</span><span>content</span> or <span>content</span>content
   with padding, use
   <span>content</span> <span>content</span> or <span>content</span> content
   without padding.  Other use cases can provide the padding (only) when
   needed. */
span {
  padding: 0;
}

/* alternate formatting method for sections of the raw html that do not have
   any content.  Instead of specifying element level styling, just add the
   css class, then let this handle whatever styling option is desired. */
.emptyBlock {
  background-color: black;
}

#skills {
  line-height: 1.3;
}

#skills li {
  padding: 0 5px;
}

.mapInfo {
  background-color: #aaa;
  font-size: small;
  line-height: 1.1em;
  max-width: 18em;
  padding: 0.5em 0 0.5em 0.5em;
}

.mapInfo p {
  font-size: inherit;
  line-height: inherit;
  margin-top: 0.5em;
  width: 100%;
}

.mapInfo p:first-child {
  margin-top: 0;
}

.imageList {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: flex-start;
  padding: 10px;
}

.imageList a {
  margin: 0;
  padding: 0;
  line-height: 0;
}

/* To be able to (easily) position the controls 'out of flow', but absolute
  relative to the parent container, the parent needs be positioned relative
  TODO: use js to turn on relative position of the parent (only) when needed?;
  */
#workExperience {
  position: relative;
}

/* for overlay controls that stay out of the main page browser layout */
.sleep,
.rowHide {
  display: none !important; /* prevent accidental overides when it should STAY hidden */
}

.controls *,
.controls {
  box-sizing: border-box;
}

.controls {
  background-color: transparent;
  color: aqua;
  line-height: 0;
  position: absolute;
  right: 5px;/* TODO: add media queries to reposition for narrow window */
  top: 0;
  /*z-index: 1000;*//* LOGIC QUERY: does z-index need to be controlled here? */
}

/* base for css menu icons/buttons */
/* > span | > * */
.controls > div {
  display: inline-block;
  font-size: 0;
  height: 40px;
  line-height: 0;
  margin: 5px;
  opacity: 0.2;
  position: relative;
  width: 40px;
}

.iconNested {
  display: block;
  position: relative;
  margin: 0 auto;
  overflow: hidden;
  padding: 0;
  height: 40px;
  width: 40px;
}

.iconNested:after,
.iconNested:before,
.controls > div:after,
.controls > div:before {
  content: '';
  display: block;
  position: absolute;
}

.controls > div.awake {
  opacity: 0.7;
}

/* 3 thick horizontal black bars */
/* MF3.6+ CH5+ SF4.5+ OP12+ IE9+ */
.menuOpenClose:before {
  height: 8px;
  width: 40px;
  background-color: #333;
  border-radius: 2px;
  top: 4px;
  left: 0;
  box-shadow: 0 12px 0 #333, 0 24px 0 #333;
}

.pageNext:before,
.pagePrevious:before {
  height: 0;
  width: 0;
  border: 20px transparent solid;
}

/* Large arrow pointing up and to the left */
/* MF3.6+ CH5+ SF4.5+ OP12+ IE9+ */
.pagePrevious:before {
  border-bottom-width: 0;
  border-left-width: 0;
  border-top-color: #333;
  top: 2px;
  left: 2px;
}

.pagePrevious:after {
  height: 10px;
  width: 33px;
  background: #333;
  transform: rotate(45deg);
  bottom: 12px;
  right: 0;
}

/* Large arrow pointing down and to the right */
/* MF3.6+ CH5+ SF4.5+ OP12+ IE9+ */
.pageNext:before {
  border-top-width: 0;
  border-right-width: 0;
  border-bottom-color: #333;
  bottom: 2px;
  right: 2px;
}

.pageNext:after {
  height: 10px;
  width: 33px;
  background: #333;
  transform: rotate(45deg);
  top: 12px;
  left: 0px;
}

/* Upward line curving left ending in an arrow */
/* MF3.6+ CH5+ SF4.5+ OP12+ IE9+ */
.pageReset:before {
  height: 0;
  width: 0;
  border: 12px transparent solid;
  border-left-width: 0;
  border-right-color: #333;
  top: 0;
  left: 5px;
}

.pageReset:after {
  height: 25px;
  width: 14px;
  display: block;
  border-top: 5px #333 solid;
  border-right: 5px #333 solid;
  border-radius: 0 20px 0 0;
  top: 10px;
  right: 4px;
}

/* Up and down arrows with horizontal lines top and bottom */
/* tags: | arrow | up | down | full range | */
/* For some unknown reason, this icon is shifting down by 5px.  This icon is
   different due to the nested span to handle the extra graphics, and 5px is
   the margin used for the main icon wrapper elements.  Still can not see (with
   dev tools) where the interaction is.  Just forcing it back up here. */
.pageAllRows {
  top: -5px;
}

.pageAllRows:after {
  height: 26px;
  width: 4px;
  background: #333;
  top: 7px;
  left: 18px;
}

.pageAllRows .iconNested {
  border-top: 2px solid #333;
  border-bottom: 2px solid #333;
  width: 20px;
}

.pageAllRows .iconNested:before {
  height: 14px;
  width: 14px;
  border: #333 solid;
  border-width: 0 4px 4px 0;
  bottom: 4px;
  left: 1px;
  transform: rotate(45deg);
}

.pageAllRows .iconNested:after {
  height: 14px;
  width: 14px;
  border: #333 solid;
  border-width: 4px 0 0 4px;
  top: 4px;
  right: 1px;
  transform: rotate(45deg);
}

#footerContacts li,
#topContacts li {
  position: relative;
  padding: 0 5px;
}

.permalink {
  margin: 0;
  padding-left: 10px;
}

/* http://nicolasgallagher.com/pure-css-gui-icons/demo/ */
.permalink span:first-child:after,
.permalink:after,
.permalink:before {
  content: '';
  position: absolute;
  top: 50%;
  transform: rotate(45deg);
  border-radius: 3px;
  background: none repeat scroll 0% 0% transparent;
}

.permalink:after,
.permalink:before {
  border: 2px solid #c50;
  height: 4px;
  width: 6px;
}

.permalink:before {
  left: -3px;
  top: 1px;
}
.permalink:after {
  left: 5px;
  top: 9px;
}

.permalink span:first-child:after {
  left: 0;
  width: 10px;
  height: 2px;
  border: 1px solid #484848;/* match background color of container element */
  margin-top: -2px;
  background-color: #c50;
  z-index: 1000;
}

.lessSkills:after,
.moreSkills:after {
  border-radius: 0.5em;
  padding: 0 7px;
}

.moreSkills:after {
  background-color: aqua;
  content: 'More…';
}

.lessSkills:after {
  background-color: orange;
  content: 'Less…';
}
